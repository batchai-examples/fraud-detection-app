digraph "Fraud Detection System Architecture" {
	DetectionRequestQueue [label="Detection Request Queue" shape=queue]
	DetectionFailureQueue [label="Detection Failure Queue" shape=queue]
	AlertQueue [label="Alert Queue (FIFO)" shape=queue]
	GatewayService [label="Gateway Microservice" shape=box]
	DetectionEngine [label="Detection Engine Microservice" shape=box]
	RuleAdmin [label="Rule Admin Microservice (Optional)" shape=box style=dashed]
	LongPollingThreadPool [label="Long-Polling Thread Pool" shape=parallelogram]
	DetectionWorkerThreadPool [label="Detection Worker Thread Pool" shape=parallelogram]
	Client [label=Client shape=ellipse]
	CloudWatch [label="AWS CloudWatch" shape=cylinder]
	Client -> GatewayService [label="Transaction Requests"]
	GatewayService -> DetectionRequestQueue [label="Submit Detection Requests"]
	DetectionRequestQueue -> LongPollingThreadPool [label="Long Polling"]
	LongPollingThreadPool -> DetectionWorkerThreadPool [label="Dispatch Requests"]
	DetectionWorkerThreadPool -> DetectionEngine [label="Process Detection"]
	DetectionEngine -> AlertQueue [label="Fraud Alerts"]
	DetectionEngine -> DetectionFailureQueue [label="Failed Requests"]
	DetectionEngine -> CloudWatch [label="Alert Metrics"]
	RuleAdmin -> DetectionEngine [label="Push Updated Rules"]
}
